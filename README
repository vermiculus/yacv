-*- mode: org -*-
Copyright 2013 S. Allred

Please report any bugs and feature requests on GitHub:

    http://www.github.com/vermiculus/yacv

----------------------------------------------------------------------

This work may be distributed and/or modified under the
conditions of the LaTeX Project Public License, either version 1.3
of this license or (at your option) any later version.
The latest version of this license is in
  http://www.latex-project.org/lppl.txt
and version 1.3 or later is part of all distributions of LaTeX
version 2005/12/01 or later.

This work has the LPPL maintenance status `maintained'.
 
The Current Maintainer of this work is Sean Allred.

yaCV consists of =yacv.cls= and all component modules listed under
"Included Files", and everything included in this distribution is
released under the LPPL v1.3 or later.

* Introduction
yaCV is a transparant and extensible framework for the logical
representation and presentation of resumes and curricula vitae.

* Organization
** Meta
yaCV uses a couple of words:
- module :: an entire group of functionality, e.g. =util=,
            =employment=, and =education=.
- library :: one part of a module; a single =sty= file.
** yaCV
yaCV uses a simple structure to clearly separate logic from
presentation.  This structure is manifested similarly to how TikZ
organizes its own libraries; each module of yaCV must adhere to a
strict naming scheme:
#+BEGIN_EXAMPLE
  yacv.util.logic.sty
  
  yacv.employment.logic.sty
  yacv.employment.presentation.spaced.sty
  yacv.employment.presentation.cramped.sty
  yacv.employment.presentation.  ...  .sty
#+END_EXAMPLE
Thus, when a package is loaded via some document-level command, each
argument's =logic= library is processed first (before any
=presentation= libraries are with =module={pres1, pres2}=).  (This is
handled via the =unknown= key in =l3keys=.)  When each logic library
has been loaded (and all document /logic/ is defined), each requested
presentation library is loaded.  In this way, presentation libraries
can account for loaded logic libraries, and each module is cohesive.

The main yaCV class merely provides utilities for managing its
component modules.  For example, =yaCV.cls= defines an =l3keys=
module:
#+BEGIN_SRC LaTeX
  \keys_define:nn { yacv } {
    unknown .code:n { \typeout{received option} }
  }
#+END_SRC
and means for sending messages to the log file.

* Package Loading
in setup macro, load all logic and presentation through
=\yacv_<module>__load:= and add =\yacv_<module>__initialize:= to
=\AtBeginDocument=.
** TODO might be weird.  test.
* Included Files
Each file listed here is released under the same license as =yacv.cls=.

- yacv.abbreviations :: Abbreviation support
  - yacv.abbreviations.logic.sty
  - yacv.abbreviations.presentation.simply.sty

